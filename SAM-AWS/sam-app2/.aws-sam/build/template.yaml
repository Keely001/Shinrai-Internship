AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Lambda + SNS + API Gateway example with CloudWatch Alarm on Errors
Globals:
  Function:
    Timeout: 10
    Runtime: python3.13
Resources:
  MySNSTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: AgeBasedWelcomeTopic
  AgeHandlerLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: /aws/lambda/AgeHandlerFunction
      RetentionInDays: 7
  LambdaAlarmTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: LambdaErrorAlarmTopic
  AgeHandlerFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: AgeHandlerFunction
      Handler: app.lambda_handler
      CodeUri: AgeHandlerFunction
      Events:
        ApiTrigger:
          Type: Api
          Properties:
            Path: /submit
            Method: post
      Environment:
        Variables:
          SNS_TOPIC_ARN:
            Ref: MySNSTopic
      Policies:
      - SNSPublishMessagePolicy:
          TopicName: AgeBasedWelcomeTopic
      - Statement:
        - Effect: Allow
          Action:
          - logs:CreateLogGroup
          - logs:CreateLogStream
          - logs:PutLogEvents
          Resource: '*'
    Metadata:
      SamResourceId: AgeHandlerFunction
  LambdaErrorAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: LambdaErrorAlarm
      AlarmDescription: Triggers if AgeHandlerFunction returns any error
      Namespace: AWS/Lambda
      MetricName: Errors
      Dimensions:
      - Name: FunctionName
        Value:
          Ref: AgeHandlerFunction
      Statistic: Sum
      Period: 60
      EvaluationPeriods: 1
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching
      AlarmActions:
      - Ref: LambdaAlarmTopic
Outputs:
  ApiEndpoint:
    Description: API Gateway endpoint URL
    Value:
      Fn::Sub: https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/submit
